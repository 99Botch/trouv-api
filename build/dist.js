(()=>{var e={584:(e,t,s)=>{const r=s(924),o=s(344);e.exports.tokenChk=tokenChk=async function(e,t,s){const n=e.headers.authorization,a=n&&n.split(" ")[1],i=await r.findOne({user_id:e.params.id,token:a},{_id:0,token:1,user_id:1});if(!a||!i)return t.status(403).json({message:"Error | No token or Session is not matching user"});o.verify(a,process.env.API_KEY,(async(r,o)=>r?t.status(403).json({err:r.message}):e.params.id!=o._id?t.status(403).json({message:"Error | Profile missmatch"}):void s()))},e.exports.sessionChk=sessionChk=async function(e,t,s){const n=e.headers.authorization,a=n&&n.split(" ")[1];if(!a)return t.status(403).json({message:"Error | No token"});o.verify(a,process.env.API_KEY,(async(o,n)=>o?t.status(403).json({err:o.message}):await r.findOne({user_id:n._id,token:a},{_id:0,token:1,user_id:1})?(e.body.addedBy=n.s,void s()):t.status(403).json({message:"Error | Session does not exist or profile missmatch"})))}},597:(e,t,s)=>{const r=s(581);e.exports.getObject=getObject=async(e,t,s)=>{try{const s=await r.findById({_id:e.params.object_id},{__v:0});return s?t.status(200).json(s):t.status(404).json("Error | No object in db")}catch(e){return t.status(404).json({message:e})}},e.exports.getObjects=getObjects=async(e,t,s)=>{try{const e=await r.find({},{__v:0});return e?t.status(200).json(e):t.status(404).json("Error | No objects in db")}catch(e){return t.status(404).json({message:e})}},e.exports.addObject=addObject=async(e,t,s)=>{try{const s=await new r({});for(const t in await e.body)s[t]=e.body[t];let o=await s.save();return o?t.status(200).json(o):t.status(404).json("Error | Could not add object")}catch(e){return t.status(400).json({message:e})}},e.exports.updObject=updObject=async(e,t,s)=>{try{let s=await r.findById({_id:e.params.object_id},{__v:0});if(!s)return t.status(404).json("Error | Could not find object");for(const t in await e.body)s[t]=e.body[t];let o=await s.save();return o?t.status(200).json(o):t.status(404).json("Error | Could not update")}catch(e){return t.status(400).json({message:e})}},e.exports.delObject=delObject=async(e,t,s)=>{try{if(!await r.findOneAndRemove({_id:e.params.object_id},{_id:1}))return t.status(404).json("Error | Object could not be deleted");t.status(204).json()}catch(e){return t.status(400).json({message:e})}}},714:(e,t,s)=>{const r=s(56),o=s(924),n=s(96),a=s(344);e.exports.getSession=getSession=async(e,t,s)=>{const r=e.headers.authorization,n=r&&r.split(" ")[1],i=await o.findOne({token:n},{_id:0,token:1});if(!n||!i)return t.status(403).json({message:"Error | Session do not exists"});a.verify(n,process.env.API_KEY,(async(e,s)=>e?t.status(403).json({err:e.message}):t.status(204).json()))},e.exports.register=register=async(e,t,s)=>{if(await r.findOne({$or:[{mail:e.body.mail},{username:e.body.username}]}))return t.status(401).json("Error | Username or Mail already taken");if(!new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@_#$%^&*])(?=.{8,})").exec(e.body.password))return t.status(400).json("Error | Password must contain at least one lowercase, one uppercase, one number and one special character (!@_#$%^&*)");e.body.password=await n.hash(e.body.password,12);const i=await new r({});for(const t in await e.body)i[t]=e.body[t];const u=await new o({user_id:i._id,token:a.sign({_id:i.id,s:i.username},process.env.API_KEY,{expiresIn:"3h"})});try{Promise.all([await i.save(),await u.save()]).then((async([e,s])=>{const r={token:s.token};return e&&s?t.status(200).json(r):t.status(401).json("Error | Could not create user")}))}catch(e){return t.status(400).json({message:e})}},e.exports.login=login=async(e,t,s)=>{try{const s=await r.findOne({mail:e.body.mail},{__v:0});if(!s)return t.status(404).json("Error | User not in db");if(!await n.compare(e.body.password,s.password))return t.status(400).json("Error | Wrong password");await o.findOne({user_id:s._id},{_id:0,token:1})&&await o.deleteOne({user_id:s._id});const i=await new o({user_id:s._id,token:a.sign({_id:s.id,s:s.username},process.env.API_KEY,{expiresIn:"3h"})});await i.save();let u={token:await i.token};return u?t.status(200).json(u):t.status(404).json("Error | Could not login")}catch(e){return t.status(400).json({message:e})}},e.exports.logout=logout=async(e,t,s)=>{try{if(!await o.findOneAndRemove({user_id:e.params.id},{_id:1,user_id:1}))return t.status(404).json("Error | Not logged in");t.status(204).json()}catch(e){return t.status(400).json({message:e})}}},581:(e,t,s)=>{const r=s(185),o=r.Schema({addedBy:{type:String,required:!0},object:{type:String,required:!0,maxLength:120},details:{type:String,required:!0},category:{type:String,required:!0},where:{type:String,required:!0},when:{type:String,required:!0},size:{type:String,required:!0},pattern:{type:String,required:!0},colours:{type:[String],required:!0,validate:e=>Array.isArray(e)&&e.length>0}});e.exports=r.model("Object",o)},924:(e,t,s)=>{const r=s(185),o=r.Schema({user_id:{type:"ObjectId",required:!0},token:{type:String,required:!0}});e.exports=r.model("Session",o)},56:(e,t,s)=>{const r=s(185),o=r.Schema({username:{type:String,required:!0},mail:{type:String,required:!0},password:{type:String,required:!0}});e.exports=r.model("User",o)},775:(e,t,s)=>{const r=s(860).Router(),{sessionChk:o}=s(584),{getObject:n,getObjects:a,addObject:i,updObject:u,delObject:d}=s(597);r.get("/:object_id",o,(async function(e,t){await n(e,t)})),r.get("",o,(async function(e,t){await a(e,t)})),r.post("",o,(async function(e,t){await i(e,t)})),r.put("/:object_id",o,(async function(e,t){await u(e,t)})),r.delete("/:object_id",o,(async function(e,t){await d(e,t)})),e.exports=r},946:(e,t,s)=>{const r=s(860).Router(),{tokenChk:o}=s(584),{register:n,login:a,logout:i,getSession:u}=s(714);r.get("/session",(async function(e,t){await u(e,t)})),r.post("/register",(async function(e,t){await n(e,t)})),r.post("/login",(async function(e,t){await a(e,t)})),r.delete("/logout/:id",o,(async(e,t)=>{await i(e,t)})),e.exports=r},96:e=>{"use strict";e.exports=require("bcrypt")},986:e=>{"use strict";e.exports=require("body-parser")},582:e=>{"use strict";e.exports=require("cors")},142:e=>{"use strict";e.exports=require("dotenv")},860:e=>{"use strict";e.exports=require("express")},17:e=>{"use strict";e.exports=require("express-body-parser-error-handler")},806:e=>{"use strict";e.exports=require("helmet")},344:e=>{"use strict";e.exports=require("jsonwebtoken")},185:e=>{"use strict";e.exports=require("mongoose")}},t={};function s(r){var o=t[r];if(void 0!==o)return o.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}var r={};(()=>{const e=s(860),t=s(185),r=s(582),o=s(142),n=s(806),a=s(17),{urlencoded:i,json:u}=s(986),d=s(946),c=s(775),p=e();o.config(),p.use(r()).use(n.hidePoweredBy()).use(n.xssFilter()).use(n.frameguard({action:"deny"})).use(n.ieNoOpen()).use(n.hsts({maxAge:864e3})).use(n.dnsPrefetchControl()).use(n.contentSecurityPolicy({directives:{defaultSrc:["'self'"],scriptSrc:["'self'"]}}));const y=process.env.DB_CONNECTION;p.use(i({extended:!1,limit:"500kb"})),p.use("/",u({limit:"500kb"})),p.use(a()),t.set("strictQuery",!1);try{t.connect(y).then((()=>{p.use(e.json()),p.use(e.urlencoded({extended:!0})),p.use("/trouv/users",d),p.use("/trouv/objects",c);const t=process.env.PORT||5555;p.listen(t,(()=>{console.log(`Server connection up in Port ${t}`)}))}))}catch(e){console.log(e)}})();var o=exports;for(var n in r)o[n]=r[n];r.__esModule&&Object.defineProperty(o,"__esModule",{value:!0})})();